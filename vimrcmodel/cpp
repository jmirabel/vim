" vim: syntax=vim

" Set the path and exclude installed header files.
" set path=include,src,tests,$DEVEL_HPP_DIR/install/include,/usr/include
set path+=include path+=src path+=tests path+=$DEVEL_HPP_DIR/install/include
"let &wildignore='**/install/include/'.substitute(expand('%:p:h:t'), '[-_]', '/', 'g').'/**,'.&wildignore


set expandtab shiftwidth=2 tabstop=8
let &titlestring = expand("%:p:h:t")
let g:cmake_install_prefix="$DEVEL_HPP_DIR/install"
let g:cmake_build_dir='build'
if hostname() == 'santiago'
  let g:number_processor=3
elseif hostname() == 'ontake'
  let g:number_processor=6
else
  let g:number_processor=system('grep -c ^processor /proc/cpuinfo')
  if g:number_processor > 4
    let g:number_processor -= 2
  elseif g:number_processor > 1
    let g:number_processor -= 1
  endif
endif

" This might be reset by the vim-cmake bundle
" set makeprg=cd\ build\ &&\ make
if isdirectory("build-rel")
  let g:MakeBuildDirectory = "build-rel"
else
  if isdirectory("build")
    let g:MakeBuildDirectory = "build"
  endif
endif
let g:MakeDefaultTarget = ""

"noremap ,mw :tabnew<CR>:tabmove 0<CR>
noremap ,mm :call RunMake(g:MakeDefaultTarget)<CR>
noremap ,mq :call RunMake("-j".g:number_processor, g:MakeDefaultTarget)<CR>
noremap ,mi :call RunMake("install")<CR>
noremap ,md :call RunMake("doc")<CR>
noremap ,mu :call RunMake("uninstall")<CR>
noremap ,mc :call RunMake("clean")<CR>
noremap ,msm :call RunMake("-s", g:MakeDefaultTarget)<CR>
" noremap ,msq :call RunMake("-s -j4")<CR>
noremap ,msq :call RunMake("-s", "-j".g:number_processor, g:MakeDefaultTarget)<CR>
noremap ,msi :call RunMake("-s", "install")<CR>
noremap ,msd :call RunMake("doc")<CR>
noremap ,msu :call RunMake("-s", "uninstall")<CR>
noremap ,msc :call RunMake("-s", "clean")<CR>
noremap ,cc :call C_CppcheckCheck ()<CR>:call C_HlMessage ()<CR>
noremap ,cs :SyntasticCheck<CR>

let g:C_CppcheckFiles="include/ src/ tests/"
"let g:ctags_command="ctags --totals=yes -o tags --recurse=yes src/ idl/ tests/ include/"
let g:ctags_command="find . -type f -regextype posix-egrep -regex '.*\.(cc?|.cpp|.hpp|.hxx|hh?|.py)$' -and -not -path '*/cmake/*' -and -not -path '*/.git/*' -and -not -path '*/build*' | ctags --totals=yes --sort=foldcase -o tags -L-"

" The first comment can be fold when 'foldmethod' is syntax
" autocmd Syntax c,cpp,idl syntax region cCommentLicense start="^\s*//" end="\n\s*\(\S[^/]\|\_$\)"me=s,re=s,he=s fold
" autocmd Syntax c,cpp,idl highlight def link cCommentLicense Comment

autocmd Syntax c,cpp,idl  set foldmethod=syntax sw=2 ts=8 colorcolumn=80,110
autocmd Syntax python set foldmethod=indent sw=4 ts=4
autocmd FileType cpp let g:syntastic_cpp_include_dirs=[$DEVEL_HPP_DIR."/install/include",$DEVEL_HPP_DIR."/install/include/eigen3","/usr/include/"]

highlight PendingWhitespace ctermbg=red guibg=lightred
match PendingWhitespace /\s\+$/

set foldlevelstart=3
